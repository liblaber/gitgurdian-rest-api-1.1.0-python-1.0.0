# This file was generated by liblab | https://liblab.com/

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "gitguardian-client"
version = "1.0.0"
license = { text = "MIT" }
description = """ # Introduction  Whether you want to build a complete integration with your software development workflow or simply want to test GitGuardian's policy break detection on any text content, you can use our API.  - The base url for the latest version is `api.gitguardian.com/v1` over `HTTPS`. - All data is sent and received as JSON by default. - All timestamps returned are ISO-8601 compliant, example: ```python 2020-03-16T04:46:00+00:00 # for date-time ```  GitGuardian supported wrappers: - Python: [**py-gitguardian**](https://github.com/GitGuardian/py-gitguardian)  GitGuardian provides you with [**GitGuardian Shield**](https://github.com/GitGuardian/gg-shield), a CLI application that uses the GitGuardian API through py-gitguardian to scan your files and detect potential secrets or issues in your code.  This CLI application can be used in many CIs (such as GitHub Actions, GitLab Pipelines, CircleCI,...) or as a pre-commit or pre-receive hook.  # Authentication  The GitGuardian API uses API keys to authenticate requests. For a detailed explanation, please refer to our dedicated [documentation](https://docs.gitguardian.com/api-docs/authentication).  Use [/v1/health](#operation/health_check) to check the validity of your token if needed.  # Pagination  The GitGuardian API employs cursor-based pagination. For a detailed explanation, please refer to our dedicated [documentation](https://docs.gitguardian.com/api-docs/pagination). """
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "requests>=2.31.0"
]
